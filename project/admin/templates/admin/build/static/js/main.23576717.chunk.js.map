{"version":3,"sources":["common/const.js","common/store.js","components/AdminAppBar.js","components/Main/MainToppage.js","common/util.js","components/Dialogs/DeleteConfirmDialog.js","components/Main/MainIndex.js","components/Main/MainEdit.js","components/Main/MainShow.js","common/404.js","components/AdminMain.js","components/AdminDrawer.js","App.js","serviceWorker.js","index.js"],"names":["CONST","APIHOST","drawerWidth","store","createStore","drawerOpen","Const","info","targetId","withStore","connect","AdminAppBar","_this","props","newIsOpen","get","set","newWidth","classes","this","react_default","a","createElement","className","root","AppBar_default","position","appbar","Toolbar_default","IconButton_default","onClick","menuButton","color","aria-label","Menu_default","Typography_default","variant","grow","react_router_dom","to","link","Button_default","React","Component","withStyles","flexGrow","marginLeft","marginRight","backgroundColor","MainToppage","state","env","pkg","key","value","push","TableRow_default","TableCell_default","Grid_default","container","spacing","item","xs","Card_default","CardContent_default","Table_default","TableBody_default","table","width","fontWeight","title","margin","Util","getAPI","url","axios","then","response","headers","catch","err","console","error","postAPI","params","newParams","URLSearchParams","param","append","post","deleteAPI","DeleteConfirmDialog","openDelete","clickOK","handleOkMethod","Dialog_default","open","isOpen","onClose","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","DialogActions_default","data-id","autoFocus","MainIndex","indexData","isOpenDelete","getIndex","model","self","Object","assertThisInitialized","setState","data","event","currentTarget","dataset","newIsOpenDelete","delete","match","nextProps","html_headers","html_table","td_key","keys","length","i","header","row","row_html","Fab_default","Details_default","editButton","Edit_default","deleteButton","Delete_default","scroll","TableHead_default","Dialogs_DeleteConfirmDialog","PureComponent","overflow","&:hover","MainEdit","schema","foreignKeys","showData","getSchema","foreign_keys","getShow","history","setPrams","new_params","toISOString","forceUpdate","save","html_row","show","includes","options","selectedId","foreignData","name","FormControl_default","fullWidth","formControl","Select_default","defaultValue","onChange","autoWidth","native","material_ui_pickers_esm","utils","DateFnsUtils","autoOk","ampm","format","bind","label","TextField_default","multiline","textarea","flex","buttons","listButton","List_default","saveButton","Save_default","Divider_default","display","withRouter","MainShow","foreignValue","foreignId","InputProps","readOnly","Date","toString","concat","NotFound","style","content","fontFamily","height","alignItems","justifyContent","textAlign","fontSize","marginBottom","AdminMain","main","react_router","exact","path","component","padding","minHeight","AdminDrawer","tables","models","ListItem_default","button","ListItemText_default","primary","Drawer_default","anchor","paper","drawerPaper","core_List_default","modelList","getInfo","components_AdminDrawer","components_AdminAppBar","components_AdminMain","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23576717.chunk.js","sourcesContent":["const CONST ={\n  APIHOST: 'http://localhost:8000',\n  drawerWidth: 240,\n}\n\nexport default CONST;","import { connect, createStore } from 'undux'\nimport Const from '../common/const';\n\nconst store = createStore({\n  drawerOpen: true,\n  drawerWidth: Const.drawerWidth,\n  info: {},\n  targetId: 0,\n})\n\nexport const withStore = connect(store)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withStore } from '../common/store'\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {NavLink} from 'react-router-dom';\n\n\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  link: {\n    color: 'white'\n  },\n  appbar: {\n    backgroundColor: '#3C8DBC'\n  }\n};\n\nclass AdminAppBar extends React.Component {\n\n  drawerOpen=()=>{\n    const store = this.props.store;\n    const newIsOpen = store.get('drawerOpen')? false: true;\n    store.set('drawerOpen')(newIsOpen);\n    const newWidth = store.get('drawerWidth') === 240? 0: 240;\n    store.set('drawerWidth')(newWidth);\n  }\n\n  render(){\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" className={classes.appbar}>\n          <Toolbar>\n            <IconButton onClick={this.drawerOpen} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              <NavLink to=\"/admin\" className={classes.link}>\n                Masonite Admin\n              </NavLink>\n            </Typography>\n            <Button color=\"inherit\">Login</Button>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nAdminAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(withStore(AdminAppBar));","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withStore } from '../../common/store';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\n\nclass MainToppage extends React.Component {\n\n  render() {\n    const state = this.props.store.state;\n    let env = [];\n    let pkg = [];\n\n    if(state.info){\n\n      for(let key in state.info.env){\n        let value = state.info.env[key];\n        env.push(\n          <TableRow key={key}>\n            <TableCell>\n              {key}\n            </TableCell>\n            <TableCell>\n              {state.info.env? value: ''}\n            </TableCell>\n          </TableRow>\n        );\n      }\n\n      for(let key in state.info.pkg){\n        let value = state.info.pkg[key];\n        pkg.push(\n          <TableRow key={key}>\n            <TableCell>\n              {key}\n            </TableCell>\n            <TableCell>\n              {state.info.env? value: ''}\n            </TableCell>\n          </TableRow>\n        );\n      }\n    }\n\n\n    return (\n      <div>\n        <h2>Dashboard</h2>\n        <Grid container spacing={24}>\n          <Grid item xs>\n            <Card>\n              <CardContent>\n                Environment\n                <Table>\n                  <TableBody>\n                    {env}\n                  </TableBody>\n                </Table>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs>\n            <Card>\n              <CardContent>\n                Dependencies\n                <Table>\n                  <TableBody>\n                    {pkg}\n                  </TableBody>\n                </Table>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  table: {\n    width: '60vw'\n  },\n  link: {\n    color: 'gray',\n    fontWeight: 'bolder'\n  },\n  title: {\n    margin: '0 auto'\n  }\n}\n\nexport default withStyles(styles)(withStore(MainToppage));","import React from 'react';\nimport axios from 'axios';\nimport CONST from './const';\n\nexport default class Util extends React.Component{\n  static getAPI=(url)=>{\n    url = CONST.APIHOST + url;\n\n    return axios.get(url)\n      .then(response=>{\n        if(response.headers['content-type'] === 'application/json; charset=utf-8'){\n          return response;\n        }else{\n          return [];\n        }\n      })\n      .catch(err=>{\n        console.error(err);\n        return [];\n      })\n  }\n\n  static postAPI=(url, params)=>{\n    url = CONST.APIHOST + url;\n\n    const newParams = new URLSearchParams();\n    for(let key in params){\n      const param = params[key];\n      newParams.append(key, param);\n    }\n\n    return axios.post(url, newParams)\n      .then(response=>{\n        return response;\n      })\n      .catch(err=>{\n        console.error(err);\n        return [];\n      })\n  }\n\n  static deleteAPI=(url)=>{\n    url = CONST.APIHOST + url;\n\n    return axios.post(url)\n      .then(response=>{\n        return response;\n      })\n      .catch(err=>{\n        console.error(err);\n        return [];\n      })\n  }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withStore } from '../../common/store';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass DeleteConfirmDialog extends React.Component {\n  openDelete=()=>{\n    this.props.openDelete();\n  }\n\n  clickOK=()=>{\n    this.props.openDelete();\n    this.props.handleOkMethod();\n  }\n\n  render(){\n    return(\n      <Dialog\n          open={this.props.isOpen}\n          onClose={this.openDelete}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Do you want to delete this data?\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              If you want to delete this data, click OK button\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.openDelete} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.clickOK} data-id={this.props.id} color=\"primary\" autoFocus>\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n    );\n  }\n}\n\nconst styles = {\n\n}\n\nexport default withStyles(styles)(withStore(DeleteConfirmDialog));","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withStore } from '../../common/store';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Fab from '@material-ui/core/Fab';\nimport Details from '@material-ui/icons/Details';\nimport Edit from '@material-ui/icons/Edit';\nimport Delete from '@material-ui/icons/Delete';\n\n\nimport {Link} from 'react-router-dom';\n\nimport Util from '../../common/util';\nimport DeleteConfirmDialog from '../Dialogs/DeleteConfirmDialog';\n\nclass MainIndex extends React.PureComponent {\n  state = {\n    indexData: [],\n    isOpenDelete: false\n  }\n\n  getIndex=(model)=>{\n    const self = this;\n    Util.getAPI('/admin/api/' + model)\n    .then(response=>{\n      self.setState({indexData: response.data});\n    })\n  }\n\n  openDelete=(event)=>{\n    if(event){\n      const store = this.props.store;\n      store.set('targetId')(event.currentTarget.dataset.id);\n    }\n\n    const newIsOpenDelete = this.state.isOpenDelete? false: true;\n    this.setState({isOpenDelete: newIsOpenDelete});\n  }\n\n  delete=(event)=>{\n    // get URL param\n    const model = this.props.match.params.model;\n\n    const id = this.props.store.state.targetId;\n    const url = '/admin/api/'+model+'/'+id+'/delete';\n\n    Util.deleteAPI(url)\n    .then(response=>{\n      this.getIndex(model);\n    })\n    .catch(err=>{\n      console.error(err);\n    })\n  }\n\n  componentDidMount(){\n    // get URL param\n    const model = this.props.match.params.model;\n\n    if(model){\n      this.getIndex(model);\n    }\n  }\n\n  componentDidUpdate(nextProps){\n    // get URL param\n    const model = this.props.match.params.model;\n\n    if(this.props !== nextProps && model){\n      this.getIndex(model);\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    // get URL param\n    const model = this.props.match.params.model;\n\n    let html_headers = [];\n    let html_table = [];\n    if(this.state.indexData && this.state.indexData[0]){\n      const td_key = Object.keys(this.state.indexData[0]).length;\n      let headers = Object.keys(this.state.indexData[0]);\n      headers.push('show', 'edit', 'delete');\n\n      for(let i in headers){\n        const header = headers[i];\n        html_headers.push(<TableCell key={i}>{header}</TableCell>);\n      }\n\n      for(let i in this.state.indexData){\n        const row = this.state.indexData[i];\n        let row_html = [];\n        for(let key in row){\n          row_html.push(<TableCell key={key}>{row[key]}</TableCell>);\n        }\n\n        row_html.push(\n          <TableCell key={td_key+1}>\n            <Link to={'/admin/'+model+'/'+row.id}>\n              <Fab aria-label=\"show\">\n                <Details />\n              </Fab>\n            </Link>\n          </TableCell>,\n          <TableCell key={td_key+2}>\n            <Link to={'/admin/'+model+'/'+row.id+'/edit'}>\n              <Fab aria-label=\"edit\" className={classes.editButton}>\n                <Edit />\n              </Fab>\n            </Link>\n          </TableCell>,\n          <TableCell key={td_key+3}>\n            <Fab\n              aria-label=\"delete\"\n              data-id={row.id}\n              onClick={this.openDelete}\n              className={classes.deleteButton}\n            >\n              <Delete />\n              </Fab>\n          </TableCell>\n        );\n        html_table.push(<TableRow key={i}>{row_html}</TableRow>);\n      }\n    }\n\n    return (\n      <div>\n        <h1>{model}</h1>\n        <Card>\n          <CardContent>\n            <p>index</p>\n            <div className={classes.scroll}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {html_headers}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {html_table}\n                </TableBody>\n              </Table>\n            </div>\n          </CardContent>\n        </Card>\n        <DeleteConfirmDialog\n          isOpen={this.state.isOpenDelete}\n          openDelete={this.openDelete}\n          handleOkMethod={this.delete}\n        />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  scroll: {\n    overflow: 'auto'\n  },\n  editButton: {\n    color: 'white',\n    backgroundColor: '#3C8DBC',\n    '&:hover': {\n      backgroundColor: '#2C7DAC',\n    },\n  },\n  deleteButton: {\n    color: 'white',\n    backgroundColor: '#DD4B39',\n    '&:hover': {\n      backgroundColor: '#CD3B29',\n    },\n  }\n}\n\nexport default withStyles(styles)(withStore(MainIndex));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withStore } from '../../common/store';\n\nimport { withRouter } from 'react-router';\nimport {NavLink} from 'react-router-dom';\n\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"material-ui-pickers\";\n\nimport List from '@material-ui/icons/List';\nimport Save from '@material-ui/icons/Save';\nimport Delete from '@material-ui/icons/Delete';\n\nimport DeleteConfirmDialog from '../Dialogs/DeleteConfirmDialog';\nimport Util from '../../common/util';\n\nclass MainEdit extends React.PureComponent{\n  state = {\n    schema: [],\n    foreignKeys: [],\n    showData: [],\n    params: [],\n    isOpenDelete: false,\n  }\n\n  getSchema=(model)=>{\n    const self = this;\n    Util.getAPI('/admin/api/schema/'+model)\n    .then(response=>{\n      self.setState({\n        schema: response.data.schema,\n        foreignKeys: response.data.foreign_keys\n      });\n    });\n  }\n\n  getShow=(model, id)=>{\n    const self = this;\n    Util.getAPI('/admin/api/'+model+'/'+id)\n    .then(response=>{\n      self.setState({showData: response.data});\n    });\n  }\n\n  //============ Delete ============\n  openDelete=(event)=>{\n    if(event){\n      const store = this.props.store;\n      store.set('targetId')(event.currentTarget.dataset.id);\n    }\n\n    const newIsOpenDelete = this.state.isOpenDelete? false: true;\n    this.setState({isOpenDelete: newIsOpenDelete});\n  }\n\n  delete=(event)=>{\n    // get URL param\n    const model = this.props.match.params.model;\n\n    //const id = event.currentTarget.dataset.id;\n    const id = this.props.store.state.targetId;\n    const url = '/admin/api/'+model+'/'+id+'/delete';\n\n    Util.deleteAPI(url)\n    .then(response=>{\n      this.props.history.push('../');\n    })\n    .catch(err=>{\n      console.error(err);\n    })\n  }\n\n  //============ Save ============\n  setPrams=(key, value)=>{\n    let new_params = this.state.showData;\n    try{\n      new_params[key] = value.toISOString();\n    }catch(err){\n      new_params[key] = value;\n    }\n    this.setState({showData: new_params});\n    this.forceUpdate();\n  }\n\n  save=(event)=>{\n    // get URL param\n    const model = this.props.match.params.model;\n\n    const id = event.currentTarget.dataset.id;\n    const url = '/admin/api/'+model+'/'+id+'/patch';\n\n    Util.postAPI(url, this.state.showData)\n    .then(response=>{\n      this.props.history.push('../'+id);\n    })\n    .catch(err=>{\n      console.error(err);\n    })\n  }\n\n  componentDidMount(){\n    // get URL param\n    const model = this.props.match.params.model;\n    const id = this.props.match.params.id;\n\n    if(model){\n      this.getSchema(model);\n      this.getShow(model, id);\n    }\n  }\n\n  render(){\n    const { classes } = this.props;\n    // get URL param\n    const model = this.props.match.params.model;\n\n    let html_row = [];\n    const keys = Object.keys(this.state.foreignKeys);\n    let i = 0;\n    for(let key in this.state.showData){\n      let show = this.state.showData[key]? this.state.showData[key]: '';\n\n      //外部キーの問\n      if(keys.includes(key)){\n        const options = []\n        let selectedId;\n        for(let i in this.state.foreignKeys[key]){\n          const foreignData = this.state.foreignKeys[key][i];\n\n          if(foreignData.id === show){\n            selectedId = foreignData.id;\n          }\n          options.push(\n            <option key={i} value={foreignData.id}>{foreignData.name}</option>\n          );\n        }\n\n        html_row.push(\n          <TableRow key={key}>\n            <TableCell>\n              {key}\n            </TableCell>\n            <TableCell>\n              <FormControl fullWidth className={classes.formControl}>\n                <Select\n                  defaultValue={selectedId}\n                  onChange={this.setPrams}\n                  name={key}\n                  className='params'\n                  autoWidth\n                  native\n                >\n                  {options}\n                </Select>\n              </FormControl>\n            </TableCell>\n          </TableRow>\n        )\n      }else if(this.state.schema[i][2] === 'DATETIME'){\n        //datetime型の時\n        html_row.push(\n          <TableRow key={key}>\n            <TableCell>\n              {key}\n            </TableCell>\n              <TableCell>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <DateTimePicker\n                    autoOk\n                    ampm={false}\n                    format=\"yyyy-MM-dd HH:mm:ss\"\n                    value={show}\n                    onChange={this.setPrams.bind(this, key)}\n                    name={key}\n                    label=\"24h clock\"\n                  />\n                </MuiPickersUtilsProvider>\n              </TableCell>\n          </TableRow>\n        );\n      }else{\n        //文字列の時\n        html_row.push(\n          <TableRow key={key}>\n            <TableCell>\n              {key}\n            </TableCell>\n            <TableCell>\n              <TextField\n                defaultValue={show}\n                onChange={this.setPrams}\n                name={key}\n                multiline\n                className={classes.textarea + ' params'}\n              />\n            </TableCell>\n          </TableRow>\n        );\n      }\n      i++;\n    }\n\n    return(\n      <div>\n        <h1>{model}</h1>\n        <Card>\n          <CardContent>\n            <div className={classes.flex}>\n              <p>Edit</p>\n              <div className={classes.buttons}>\n                <NavLink to='../'>\n                  <Button variant=\"contained\" className={classes.listButton}>\n                    <List/>list\n                  </Button>\n                </NavLink>\n                <Button variant=\"contained\" className={classes.saveButton} data-id={this.props.match.params.id} onClick={this.save}>\n                  <Save/>save\n                </Button>\n                <Button variant=\"contained\"\n                  onClick={this.openDelete}\n                  data-id={this.props.match.params.id}\n                  className={classes.deleteButton}\n                >\n                  <Delete/>delete\n                </Button>\n              </div>\n            </div>\n            <Divider />\n            <div className={classes.scroll}>\n              <Table>\n                <TableBody>\n                  {html_row}\n                </TableBody>\n              </Table>\n            </div>\n          </CardContent>\n        </Card>\n        <DeleteConfirmDialog\n          isOpen={this.state.isOpenDelete}\n          openDelete={this.openDelete}\n          handleOkMethod={this.delete}\n        />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  scroll: {\n    overflow: 'auto'\n  },\n  textarea: {\n    width: '90%'\n  },\n  flex: {\n    display: 'flex'\n  },\n  buttons: {\n    margin: '0 0 0 auto'\n  },\n  listButton: {\n    color: 'black',\n    backgroundColor: '#ECF0F5'\n  },\n  saveButton: {\n    color: 'white',\n    backgroundColor: '#3C8DBC',\n    '&:hover': {\n      backgroundColor: '#2C7DAC',\n    },\n  },\n  deleteButton: {\n    color: 'white',\n    backgroundColor: '#DD4B39',\n    '&:hover': {\n      backgroundColor: '#CD3B29',\n    },\n  }\n}\n\nexport default withStyles(styles)(withRouter(withStore(MainEdit)));","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withStore } from '../../common/store';\n\nimport { withRouter } from 'react-router';\nimport {NavLink} from 'react-router-dom';\n\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\n\nimport List from '@material-ui/icons/List';\nimport Edit from '@material-ui/icons/Edit';\nimport Delete from '@material-ui/icons/Delete';\n\nimport DeleteConfirmDialog from '../Dialogs/DeleteConfirmDialog';\nimport Util from '../../common/util';\n\nclass MainShow extends React.PureComponent{\n  state = {\n    schema: [],\n    foreignKeys: [],\n    showData: [],\n    isOpenDelete: false\n  }\n\n  getSchema=(model)=>{\n    const self = this;\n    Util.getAPI('/admin/api/schema/'+model)\n    .then(response=>{\n      self.setState({\n        schema: response.data.schema,\n        foreignKeys: response.data.foreign_keys\n      });\n    });\n  }\n\n  getShow=(model, id)=>{\n    const self = this;\n    Util.getAPI('/admin/api/'+model+'/'+id)\n    .then(response=>{\n      self.setState({showData: response.data});\n    });\n  }\n\n  openDelete=(event)=>{\n    if(event){\n      const store = this.props.store;\n      store.set('targetId')(event.currentTarget.dataset.id);\n    }\n\n    const newIsOpenDelete = this.state.isOpenDelete? false: true;\n    this.setState({isOpenDelete: newIsOpenDelete});\n  }\n\n  delete=(event)=>{\n    // get URL param\n    const model = this.props.match.params.model;\n\n    const id = this.props.store.state.targetId;\n    const url = '/admin/api/'+model+'/'+id+'/delete';\n\n    Util.deleteAPI(url)\n    .then(response=>{\n      this.props.history.push('./');\n    })\n    .catch(err=>{\n      console.error(err);\n    })\n  }\n\n  componentDidMount(){\n    // get URL param\n    const model = this.props.match.params.model;\n    const id = this.props.match.params.id;\n\n    if(model){\n      this.getSchema(model);\n      this.getShow(model, id);\n    }\n  }\n\n  render(){\n    const { classes } = this.props;\n    // get URL param\n    const model = this.props.match.params.model;\n    const id = this.props.match.params.id;\n\n    let i = 0;\n    let html_row = [];\n    const keys = Object.keys(this.state.foreignKeys);\n    for(let key in this.state.showData){\n      let show = this.state.showData[key]? this.state.showData[key]: '';\n\n      // when column is forwign key\n      if(keys.includes(key)){\n        let foreignValue, foreignId;\n        for(let i in this.state.foreignKeys[key]){\n          const foreignData = this.state.foreignKeys[key][i];\n          if(foreignData.id === show){\n            foreignValue = foreignData.name;\n            foreignId = foreignData.id;\n            break;\n          }\n        }\n        html_row.push(\n          <TableRow key={key}>\n            <TableCell>\n              {key}\n            </TableCell>\n            <TableCell>\n              <TextField\n                value={foreignValue}\n                data-id={foreignId}\n                InputProps={{\n                  readOnly: true,\n                }}\n                multiline\n                className={classes.textarea}\n              />\n            </TableCell>\n          </TableRow>\n        );\n        i++;\n      }else if(this.state.schema[i][2] === 'DATETIME'){\n        //datetime型の時\n        html_row.push(\n          <TableRow key={key}>\n            <TableCell>\n              {key}\n            </TableCell>\n              <TableCell>\n                <TextField\n                  value={new Date(show).toString()}\n                  data-id={key}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  multiline\n                  className={classes.textarea}\n                />\n              </TableCell>\n          </TableRow>\n        );\n        i++;\n      }else{\n        html_row.push(\n          <TableRow key={key}>\n            <TableCell>\n              {key}\n            </TableCell>\n            <TableCell>\n              <TextField\n                value={show}\n                InputProps={{\n                  readOnly: true,\n                }}\n                multiline\n                className={classes.textarea}\n              />\n            </TableCell>\n          </TableRow>\n        );\n        i++;\n      }\n    }\n\n    return(\n      <div>\n        <h1>{model}</h1>\n        <Card>\n          <CardContent>\n          <div className={classes.flex}>\n            <p>Detail</p>\n            <div className={classes.buttons}>\n              <NavLink to='./'>\n                <Button variant=\"contained\" className={classes.listButton}>\n                  <List/>list\n                </Button>\n              </NavLink>\n              <NavLink to={`./${id}/edit`}>\n                <Button variant=\"contained\" className={classes.editButton}>\n                  <Edit/>edit\n                </Button>\n              </NavLink>\n              <Button\n                onClick={this.openDelete}\n                data-id={this.props.match.params.id}\n                variant=\"contained\"\n                className={classes.deleteButton}\n              >\n                <Delete/>delete\n              </Button>\n              </div>\n            </div>\n            <Divider />\n            <div className={classes.scroll}>\n              <Table>\n                <TableBody>\n                  {html_row}\n                </TableBody>\n              </Table>\n            </div>\n          </CardContent>\n        </Card>\n        <DeleteConfirmDialog\n          isOpen={this.state.isOpenDelete}\n          openDelete={this.openDelete}\n          handleOkMethod={this.delete}\n        />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  scroll: {\n    overflow: 'auto'\n  },\n  textarea: {\n    width: '90%'\n  },\n  flex: {\n    display: 'flex'\n  },\n  buttons: {\n    margin: '0 0 0 auto'\n  },\n  listButton: {\n    color: 'black',\n    backgroundColor: '#ECF0F5'\n  },\n  editButton: {\n    color: 'white',\n    backgroundColor: '#3C8DBC',\n    '&:hover': {\n      backgroundColor: '#2C7DAC',\n    },\n  },\n  deleteButton: {\n    color: 'white',\n    backgroundColor: '#DD4B39',\n    '&:hover': {\n      backgroundColor: '#CD3B29',\n    },\n  }\n}\n\nexport default withStyles(styles)(withRouter(withStore(MainShow)));","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withStore } from './store';\n\nimport { withRouter } from 'react-router';\n\nclass NotFound extends React.Component {\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className={classes.style}>\n        <div className={classes.content}>\n          <div className={classes.title}>\n            404 Not Found\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  style: {\n    backgroundColor: '#fff',\n    color: '#636b6f',\n    fontFamily: 'Raleway, sans-serif',\n    //fontFamily: 'Raleway',\n    fontWeight: 100,\n    height: '80vh',\n    margin: 0,\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    position: 'relative',\n  },\n  content: {\n    textAlign: 'center'\n  },\n  title: {\n    fontSize: '84px',\n    marginBottom: '30px'\n  }\n}\n\nexport default withStyles(styles)(withRouter(withStore(NotFound)));","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Switch, Route} from 'react-router-dom';\nimport MainToppage from './Main/MainToppage';\nimport MainIndex from './Main/MainIndex';\nimport MainEdit from './Main/MainEdit';\nimport MainShow from './Main/MainShow';\n\nimport NotFound from '../common/404';\n\nclass AdminMain extends React.Component {\n  render(){\n    const { classes } = this.props;\n\n    return(\n      <div className={classes.main}>\n        <Switch>\n          <Route exact path=\"/admin\" component={MainToppage} />\n          <Route exact path=\"/admin/:model\" component={MainIndex} />\n          <Route exact path=\"/admin/:model/:id\" component={MainShow} />\n          <Route exact path=\"/admin/:model/:id/edit\" component={MainEdit} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  main: {\n    padding: '20px 30px 30px',\n    backgroundColor: '#ECF0F5',\n    minHeight: '80vh'\n  }\n}\n\nexport default withStyles(styles)(AdminMain);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withStore } from '../common/store'\n\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport {Link} from 'react-router-dom';\n\nclass AdminDrawer extends React.Component {\n  state = {\n    tables: null,\n  }\n\n  render() {\n    const { classes } = this.props;\n    const state = this.props.store.state;\n\n    let tables = [];\n    if(state.info.models){\n      for(let i in state.info.models){\n        let model = state.info.models[i]\n        tables.push(\n          <Link to={\"/admin/\"+model} key={i}>\n            <ListItem button>\n              <ListItemText primary={model + ' Management'} />\n            </ListItem>\n          </Link>\n        );\n        i++;\n      }\n    }\n\n    return (\n      <Drawer\n        container={this.props.container}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={state.drawerOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <List className={classes.modelList}>\n          {tables}\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nconst styles = {\n  drawerPaper: {\n    width: 240,\n    backgroundColor: '#F9FAFC'\n  },\n  modelList: {\n    backgroundColor: '#F4F4F5'\n  }\n}\n\nexport default withStyles(styles)(withStore(AdminDrawer));","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport AdminAppBar from './components/AdminAppBar';\nimport AdminMain from './components/AdminMain';\nimport AdminDrawer from './components/AdminDrawer';\n\nimport {withStore} from './common/store';\nimport Util from './common/util';\n\nclass App extends Component {\n\n  getInfo=()=>{\n    const store = this.props.store;\n    Util.getAPI('/admin/api/info')\n    .then(response=>{\n      if(response.data){\n        store.set('info')(response.data);\n      }\n    })\n  }\n\n  componentDidMount(){\n    this.getInfo();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <AdminDrawer/>\n          <div className='rightContents' style={{marginLeft: this.props.store.state.drawerWidth}}>\n            <AdminAppBar/>\n            <AdminMain/>\n          </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default withStore(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}