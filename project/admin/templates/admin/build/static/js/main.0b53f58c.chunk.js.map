{"version":3,"sources":["logo.svg","common/const.js","common/store.js","components/AdminAppBar.js","common/util.js","components/Main/MainToppage.js","components/Main/MainIndex.js","components/Main/MainEdit.js","components/Main/MainShow.js","components/AdminMain.js","components/AdminDrawer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CONST","APIHOST","drawerWidth","store","createStore","drawerOpen","Const","info","withStore","connect","AdminAppBar","_this","props","newIsOpen","get","set","newWidth","classes","this","react_default","a","createElement","className","root","AppBar_default","position","appbar","Toolbar_default","IconButton_default","onClick","menuButton","color","aria-label","Menu_default","Typography_default","variant","grow","react_router_dom","to","link","Button_default","React","Component","withStyles","flexGrow","marginLeft","marginRight","backgroundColor","Util","getAPI","url","axios","then","response","headers","catch","err","console","error","postAPI","params","newParams","URLSearchParams","key","param","append","post","deleteAPI","MainToppage","state","env","pkg","value","push","TableRow_default","TableCell_default","Grid_default","container","spacing","item","xs","Card_default","CardContent_default","Table_default","TableBody_default","table","width","fontWeight","title","margin","MainIndex","indexData","getIndex","model","self","Object","assertThisInitialized","setState","data","delete","event","match","id","currentTarget","dataset","nextProps","html_headers","html_table","td_key","keys","length","i","header","row","row_html","Fab_default","Details_default","editButton","Edit_default","data-id","deleteButton","Delete_default","scroll","TableHead_default","PureComponent","overflow","&:hover","MainEdit","schema","foreignKeys","showData","getSchema","foreign_keys","getShow","setPrams","new_params","target","name","save","log","history","html_row","show","includes","options","selectedId","foreignData","FormControl_default","fullWidth","formControl","Select_default","defaultValue","onChange","autoWidth","native","type","textarea","flex","buttons","listButton","List_default","saveButton","Save_default","Divider_default","display","withRouter","MainShow","foreignValue","foreignId","readOnly","concat","AdminMain","main","react_router","exact","path","component","padding","minHeight","AdminDrawer","tables","_this$props","theme","models","ListItem_default","button","ListItemText_default","primary","Drawer_default","anchor","open","paper","drawerPaper","core_List_default","modelList","getInfo","components_AdminDrawer","style","components_AdminAppBar","components_AdminMain","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0b53f58c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const CONST ={\n  APIHOST: 'http://localhost:8000',\n  drawerWidth: 240,\n}\n\nexport default CONST;","import { connect, createStore } from 'undux'\nimport Const from '../common/const';\n\nconst store = createStore({\n  drawerOpen: true,\n  drawerWidth: Const.drawerWidth,\n  info: {},\n})\n\nexport const withStore = connect(store)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {Link, NavLink} from 'react-router-dom';\n\nimport { withStore } from '../common/store'\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  link: {\n    color: 'white'\n  },\n  appbar: {\n    backgroundColor: '#3C8DBC'\n  }\n};\n\nclass AdminAppBar extends React.Component {\n\n  drawerOpen=()=>{\n    const store = this.props.store;\n    const newIsOpen = store.get('drawerOpen')? false: true;\n    store.set('drawerOpen')(newIsOpen);\n    const newWidth = store.get('drawerWidth') === 240? 0: 240;\n    store.set('drawerWidth')(newWidth);\n  }\n\n  render(){\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" className={classes.appbar}>\n          <Toolbar>\n            <IconButton onClick={this.drawerOpen} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              <NavLink to=\"/admin\" className={classes.link}>\n                Masonite Admin\n              </NavLink>\n            </Typography>\n            <Button color=\"inherit\">Login</Button>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nAdminAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(withStore(AdminAppBar));","import React from 'react';\nimport axios from 'axios';\nimport CONST from './const';\n\nexport default class Util extends React.Component{\n  static getAPI=(url)=>{\n    url = CONST.APIHOST + url;\n\n    return axios.get(url)\n      .then(response=>{\n        if(response.headers['content-type'] === 'application/json; charset=utf-8'){\n          return response;\n        }else{\n          return [];\n        }\n      })\n      .catch(err=>{\n        console.error(err);\n        return [];\n      })\n  }\n\n  static postAPI=(url, params)=>{\n    url = CONST.APIHOST + url;\n\n    const newParams = new URLSearchParams();\n    for(let key in params){\n      const param = params[key];\n      newParams.append(key, param);\n    }\n\n    return axios.post(url, newParams)\n      .then(response=>{\n        return response;\n      })\n      .catch(err=>{\n        console.error(err);\n        return [];\n      })\n  }\n\n  static deleteAPI=(url)=>{\n    url = CONST.APIHOST + url;\n\n    return axios.post(url)\n      .then(response=>{\n        return response;\n      })\n      .catch(err=>{\n        console.error(err);\n        return [];\n      })\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withStore } from '../../common/store';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Add from '@material-ui/icons/Add';\nimport Create from '@material-ui/icons/Create';\n\nimport {Link, NavLink} from 'react-router-dom';\n\nimport Util from '../../common/util';\n\nclass MainToppage extends React.Component {\n\n  render() {\n    const { classes } = this.props;\n    const state = this.props.store.state;\n    let env = [];\n    let pkg = [];\n\n    if(state.info){\n\n      for(let key in state.info.env){\n        let value = state.info.env[key];\n        env.push(\n          <TableRow key={key}>\n            <TableCell>\n              {key}\n            </TableCell>\n            <TableCell>\n              {state.info.env? value: ''}\n            </TableCell>\n          </TableRow>\n        );\n      }\n\n      for(let key in state.info.pkg){\n        let value = state.info.pkg[key];\n        pkg.push(\n          <TableRow key={key}>\n            <TableCell>\n              {key}\n            </TableCell>\n            <TableCell>\n              {state.info.env? value: ''}\n            </TableCell>\n          </TableRow>\n        );\n      }\n    }\n\n\n    return (\n      <div>\n        <h2>Dashboard</h2>\n        <Grid container spacing={24}>\n          <Grid item xs>\n            <Card>\n              <CardContent>\n                Environment\n                <Table>\n                  <TableBody>\n                    {env}\n                  </TableBody>\n                </Table>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs>\n            <Card>\n              <CardContent>\n                Dependencies\n                <Table>\n                  <TableBody>\n                    {pkg}\n                  </TableBody>\n                </Table>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  table: {\n    width: '60vw'\n  },\n  link: {\n    color: 'gray',\n    fontWeight: 'bolder'\n  },\n  title: {\n    margin: '0 auto'\n  }\n}\n\nexport default withStyles(styles)(withStore(MainToppage));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withStore } from '../../common/store';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Details from '@material-ui/icons/Details';\nimport Edit from '@material-ui/icons/Edit';\nimport Delete from '@material-ui/icons/Delete';\n\n\nimport {Link} from 'react-router-dom';\n\nimport Util from '../../common/util';\n\nclass MainIndex extends React.PureComponent {\n  state = {\n    indexData: []\n  }\n\n  getIndex=(model)=>{\n    const self = this;\n    Util.getAPI('/admin/api/' + model)\n    .then(response=>{\n      self.setState({indexData: response.data});\n    })\n  }\n\n  delete=(event)=>{\n    // get URL param\n    const model = this.props.match.params.model;\n\n    const id = event.currentTarget.dataset.id;\n    const url = '/admin/api/'+model+'/'+id+'/delete';\n\n    Util.deleteAPI(url)\n    .then(response=>{\n      this.getIndex(model);\n    })\n    .catch(err=>{\n      console.error(err);\n    })\n  }\n\n  componentDidMount(){\n    // get URL param\n    const model = this.props.match.params.model;\n\n    if(model){\n      this.getIndex(model);\n    }\n  }\n\n  componentDidUpdate(nextProps){\n    // get URL param\n    const model = this.props.match.params.model;\n\n    if(this.props !== nextProps && model){\n      this.getIndex(model);\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    // get URL param\n    const model = this.props.match.params.model;\n\n    let html_headers = [];\n    let html_table = [];\n    if(this.state.indexData && this.state.indexData[0]){\n      const td_key = Object.keys(this.state.indexData[0]).length;\n      let headers = Object.keys(this.state.indexData[0]);\n      headers.push('show', 'edit', 'delete');\n\n      for(let i in headers){\n        const header = headers[i];\n        html_headers.push(<TableCell key={i}>{header}</TableCell>);\n      }\n\n      for(let i in this.state.indexData){\n        const row = this.state.indexData[i];\n        let row_html = [];\n        for(let key in row){\n          row_html.push(<TableCell key={key}>{row[key]}</TableCell>);\n        }\n\n        row_html.push(\n          <TableCell key={td_key+1}>\n            <Link to={'/admin/'+model+'/'+row.id}>\n              <Fab aria-label=\"show\">\n                <Details />\n              </Fab>\n            </Link>\n          </TableCell>,\n          <TableCell key={td_key+2}>\n            <Link to={'/admin/'+model+'/'+row.id+'/edit'}>\n              <Fab aria-label=\"edit\" className={classes.editButton}>\n                <Edit />\n              </Fab>\n            </Link>\n          </TableCell>,\n          <TableCell key={td_key+3}>\n            <Fab aria-label=\"delete\" data-id={row.id} onClick={this.delete} className={classes.deleteButton}>\n                <Delete />\n              </Fab>\n          </TableCell>,\n        );\n        html_table.push(<TableRow key={i}>{row_html}</TableRow>);\n      }\n    }\n\n    return (\n      <div>\n        <h1>{model}</h1>\n        <Card>\n          <CardContent>\n            <p>index</p>\n            <div className={classes.scroll}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {html_headers}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {html_table}\n                </TableBody>\n              </Table>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  scroll: {\n    overflow: 'auto'\n  },\n  editButton: {\n    color: 'white',\n    backgroundColor: '#3C8DBC',\n    '&:hover': {\n      backgroundColor: '#2C7DAC',\n    },\n  },\n  deleteButton: {\n    color: 'white',\n    backgroundColor: '#DD4B39',\n    '&:hover': {\n      backgroundColor: '#CD3B29',\n    },\n  }\n}\n\nexport default withStyles(styles)(withStore(MainIndex));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withStore } from '../../common/store';\n\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Input from '@material-ui/core/Input';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport { withRouter } from 'react-router';\nimport {NavLink} from 'react-router-dom';\n\nimport List from '@material-ui/icons/List';\nimport Edit from '@material-ui/icons/Edit';\nimport Save from '@material-ui/icons/Save';\n\nimport Util from '../../common/util';\n\nclass MainEdit extends React.PureComponent{\n  state = {\n    schema: [],\n    foreignKeys: [],\n    showData: [],\n    params: [],\n  }\n\n  getSchema=(model)=>{\n    const self = this;\n    Util.getAPI('/admin/api/schema/'+model)\n    .then(response=>{\n      self.setState({\n        schema: response.data.schema,\n        foreignKeys: response.data.foreign_keys\n      });\n    });\n  }\n\n  getShow=(model, id)=>{\n    const self = this;\n    Util.getAPI('/admin/api/'+model+'/'+id)\n    .then(response=>{\n      self.setState({showData: response.data});\n    });\n  }\n\n  setPrams=(event)=>{\n    let new_params = this.state.params;\n    new_params[event.target.name] = event.target.value;\n    this.setState({params: new_params});\n  }\n\n  save=(event)=>{\n    // get URL param\n    const model = this.props.match.params.model;\n\n    const id = event.currentTarget.dataset.id;\n    const url = '/admin/api/'+model+'/'+id+'/patch';\n    console.log(this.state.params);\n\n    Util.postAPI(url, this.state.params)\n    .then(response=>{\n      this.props.history.push('../'+id);\n    })\n    .catch(err=>{\n      console.error(err);\n    })\n  }\n\n  componentDidMount(){\n    // get URL param\n    const model = this.props.match.params.model;\n    const id = this.props.match.params.id;\n\n    if(model){\n      this.getSchema(model);\n      this.getShow(model, id);\n    }\n  }\n\n  render(){\n    const { classes } = this.props;\n    // get URL param\n    const model = this.props.match.params.model;\n    const id = this.props.match.params.id;\n\n    let i = 0;\n    let html_row = [];\n    const keys = Object.keys(this.state.foreignKeys);\n    for(let key in this.state.showData){\n      let show = this.state.showData[key]? this.state.showData[key]: '';\n\n      if(keys.includes(key)){\n        const options = []\n        let selectedId, selectedValue;\n        for(let i in this.state.foreignKeys[key]){\n          const foreignData = this.state.foreignKeys[key][i];\n\n          if(foreignData.id == show){\n            selectedId = foreignData.id;\n            selectedValue = foreignData.name;\n          }\n          options.push(\n            <option key={i} value={foreignData.id}>{foreignData.name}</option>\n          );\n        }\n\n        html_row.push(\n          <TableRow key={key}>\n            <TableCell>\n              {key}\n            </TableCell>\n            <TableCell>\n              <FormControl fullWidth className={classes.formControl}>\n                <Select\n                  defaultValue={selectedId}\n                  onChange={this.setPrams}\n                  name={key}\n                  className='params'\n                  autoWidth\n                  native\n                >\n                  {options}\n                </Select>\n              </FormControl>\n            </TableCell>\n          </TableRow>\n        )\n        i++;\n      }else{\n        html_row.push(\n          <TableRow key={key}>\n            <TableCell>\n              {key}\n            </TableCell>\n            <TableCell>\n              <textarea type='text' defaultValue={show} onChange={this.setPrams} name={key} className={classes.textarea + ' params'} ></textarea>\n            </TableCell>\n          </TableRow>\n        );\n        i++;\n      }\n    }\n\n    return(\n      <div>\n        <h1>{model}</h1>\n        <Card>\n          <CardContent>\n            <div className={classes.flex}>\n              <p>Edit</p>\n              <div className={classes.buttons}>\n                <NavLink to='../'>\n                  <Button variant=\"contained\" className={classes.listButton}>\n                    <List/>list\n                  </Button>\n                </NavLink>\n                <Button variant=\"contained\" className={classes.saveButton} data-id={this.props.match.params.id} onClick={this.save}>\n                  <Save/>save\n                </Button>\n              </div>\n            </div>\n            <Divider />\n            <div className={classes.scroll}>\n              <Table>\n                <TableBody>\n                  {html_row}\n                </TableBody>\n              </Table>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  scroll: {\n    overflow: 'auto'\n  },\n  textarea: {\n    width: '90%'\n  },\n  flex: {\n    display: 'flex'\n  },\n  buttons: {\n    margin: '0 0 0 auto'\n  },\n  listButton: {\n    color: 'black',\n    backgroundColor: '#ECF0F5'\n  },\n  saveButton: {\n    color: 'white',\n    backgroundColor: '#3C8DBC',\n    '&:hover': {\n      backgroundColor: '#2C7DAC',\n    },\n  },\n}\n\nexport default withStyles(styles)(withRouter(withStore(MainEdit)));","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withStore } from '../../common/store';\n\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { withRouter } from 'react-router';\nimport {NavLink} from 'react-router-dom';\n\nimport List from '@material-ui/icons/List';\nimport Edit from '@material-ui/icons/Edit';\nimport Delete from '@material-ui/icons/Delete';\n\nimport Util from '../../common/util';\n\nclass MainShow extends React.PureComponent{\n  state = {\n    schema: [],\n    foreignKeys: [],\n    showData: [],\n  }\n\n  getSchema=(model)=>{\n    const self = this;\n    Util.getAPI('/admin/api/schema/'+model)\n    .then(response=>{\n      self.setState({\n        schema: response.data.schema,\n        foreignKeys: response.data.foreign_keys\n      });\n    });\n  }\n\n  getShow=(model, id)=>{\n    const self = this;\n    Util.getAPI('/admin/api/'+model+'/'+id)\n    .then(response=>{\n      self.setState({showData: response.data});\n    });\n  }\n\n  delete=(event)=>{\n    // get URL param\n    const model = this.props.match.params.model;\n\n    const id = event.currentTarget.dataset.id;\n    const url = '/admin/api/'+model+'/'+id+'/delete';\n\n    Util.deleteAPI(url)\n    .then(response=>{\n      this.props.history.push('./');\n    })\n    .catch(err=>{\n      console.error(err);\n    })\n  }\n\n  componentDidMount(){\n    // get URL param\n    const model = this.props.match.params.model;\n    const id = this.props.match.params.id;\n\n    if(model){\n      this.getSchema(model);\n      this.getShow(model, id);\n    }\n  }\n\n  render(){\n    const { classes } = this.props;\n    // get URL param\n    const model = this.props.match.params.model;\n    const id = this.props.match.params.id;\n\n    let i = 0;\n    let html_row = [];\n    const keys = Object.keys(this.state.foreignKeys);\n    for(let key in this.state.showData){\n      let show = this.state.showData[key]? this.state.showData[key]: '';\n\n      // when column is forwign key\n      if(keys.includes(key)){\n        let foreignValue, foreignId;\n        for(let i in this.state.foreignKeys[key]){\n          const foreignData = this.state.foreignKeys[key][i];\n          if(foreignData.id == show){\n            foreignValue = foreignData.name;\n            foreignId = foreignData.id;\n            break;\n          }\n        }\n        html_row.push(\n          <TableRow key={key}>\n            <TableCell>\n              {key}\n            </TableCell>\n            <TableCell>\n              <textarea type='text' value={foreignValue} data-id={foreignId} className={classes.textarea} readOnly ></textarea>\n            </TableCell>\n          </TableRow>\n        );\n        i++;\n      }else{\n        html_row.push(\n          <TableRow key={key}>\n            <TableCell>\n              {key}\n            </TableCell>\n            <TableCell>\n              <textarea type='text' value={show} className={classes.textarea} readOnly ></textarea>\n            </TableCell>\n          </TableRow>\n        );\n        i++;\n      }\n    }\n\n    return(\n      <div>\n        <h1>{model}</h1>\n        <Card>\n          <CardContent>\n          <div className={classes.flex}>\n            <p>Detail</p>\n            <div className={classes.buttons}>\n              <NavLink to='./'>\n                <Button variant=\"contained\" className={classes.listButton}>\n                  <List/>list\n                </Button>\n              </NavLink>\n              <NavLink to={`./${id}/edit`}>\n                <Button variant=\"contained\" className={classes.editButton}>\n                  <Edit/>edit\n                </Button>\n              </NavLink>\n              <Button variant=\"contained\" className={classes.deleteButton} data-id={this.props.match.params.id} onClick={this.delete}>\n                <Delete/>delete\n              </Button>\n              </div>\n            </div>\n            <Divider />\n            <div className={classes.scroll}>\n              <Table>\n                <TableBody>\n                  {html_row}\n                </TableBody>\n              </Table>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  scroll: {\n    overflow: 'auto'\n  },\n  textarea: {\n    width: '90%'\n  },\n  flex: {\n    display: 'flex'\n  },\n  buttons: {\n    margin: '0 0 0 auto'\n  },\n  listButton: {\n    color: 'black',\n    backgroundColor: '#ECF0F5'\n  },\n  editButton: {\n    color: 'white',\n    backgroundColor: '#3C8DBC',\n    '&:hover': {\n      backgroundColor: '#2C7DAC',\n    },\n  },\n  deleteButton: {\n    color: 'white',\n    backgroundColor: '#DD4B39',\n    '&:hover': {\n      backgroundColor: '#CD3B29',\n    },\n  }\n}\n\nexport default withStyles(styles)(withRouter(withStore(MainShow)));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport MainToppage from './Main/MainToppage';\nimport MainIndex from './Main/MainIndex';\nimport MainEdit from './Main/MainEdit';\nimport MainShow from './Main/MainShow';\n\nclass AdminMain extends React.Component {\n  render(){\n    const { classes } = this.props;\n\n    return(\n      <div className={classes.main}>\n        <Switch>\n          <Route exact path=\"/admin\" component={MainToppage} />\n          <Route exact path=\"/admin/:model\" component={MainIndex} />\n          <Route exact path=\"/admin/:model/:id\" component={MainShow} />\n          <Route exact path=\"/admin/:model/:id/edit\" component={MainEdit} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  main: {\n    padding: '20px 30px 30px',\n    backgroundColor: '#ECF0F5',\n    minHeight: '80vh'\n  }\n}\n\nexport default withStyles(styles)(AdminMain);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withStore } from '../common/store'\n\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport {Link} from 'react-router-dom';\n\nimport Util from '../common/util';\n\n\n\nclass AdminDrawer extends React.Component {\n  state = {\n    tables: null,\n  }\n\n  render() {\n    const { classes, theme } = this.props;\n    const state = this.props.store.state;\n\n    let tables = [];\n    if(state.info.models){\n      for(let i in state.info.models){\n        let model = state.info.models[i]\n        tables.push(\n          <Link to={\"/admin/\"+model} key={i}>\n            <ListItem button>\n              <ListItemText primary={model + ' Management'} />\n            </ListItem>\n          </Link>\n        );\n        i++;\n      }\n    }\n\n    return (\n      <Drawer\n        container={this.props.container}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={state.drawerOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <List className={classes.modelList}>\n          {tables}\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nconst styles = {\n  drawerPaper: {\n    width: 240,\n    backgroundColor: '#F9FAFC'\n  },\n  modelList: {\n    backgroundColor: '#F4F4F5'\n  }\n}\n\nexport default withStyles(styles)(withStore(AdminDrawer));","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport Const from './common/const';\nimport AdminAppBar from './components/AdminAppBar';\nimport AdminMain from './components/AdminMain';\nimport AdminDrawer from './components/AdminDrawer';\n\nimport {withStore} from './common/store';\nimport Util from './common/util';\n\nclass App extends Component {\n\n  getInfo=()=>{\n    const store = this.props.store;\n    Util.getAPI('/admin/api/info')\n    .then(response=>{\n      if(response.data){\n        store.set('info')(response.data);\n      }\n    })\n  }\n\n  componentDidMount(){\n    this.getInfo();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <AdminDrawer/>\n          <div className='rightContents' style={{marginLeft: this.props.store.state.drawerWidth}}>\n            <AdminAppBar/>\n            <AdminMain/>\n          </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default withStore(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}